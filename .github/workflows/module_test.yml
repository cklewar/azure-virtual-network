name: Azure marketplace agreement module
on: push
jobs:
  azure-marketplace-agreement-module-validate:
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub."
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository and submodules
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Checkout support repo
        uses: actions/checkout@v3
        with:
          repository: cklewar/f5-xc-cert
          path: f5-xc-cert
          token: ${{ secrets.GH_PAT }}
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: List files in the repository
        run: |
          ls -la ${{ github.workspace }}
      - name: List files in the cert repository
        run: |
          ls -la ${{ github.workspace }}/f5-xc-cert
      - name: Setup environment
        id: setup_env
        run: |
          cp main.tf.example main.tf
      - name: Setup Terraform
        id: setup_tf
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      - name: Terraform Init
        id: init
        env:
          TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_APP_TERRAFORM_IO }}
        run: terraform init
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
  azure-marketplace-agreement-module-plan:
    runs-on: ubuntu-latest
    needs: [ azure-marketplace-agreement-module-validate ]
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub."
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository and submodules
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Checkout support repo
        uses: actions/checkout@v3
        with:
          repository: cklewar/f5-xc-cert
          path: f5-xc-cert
          token: ${{ secrets.GH_PAT }}
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: List files in the repository
        run: |
          ls -la ${{ github.workspace }}
      - name: List files in the cert repository
        run: |
          ls -la ${{ github.workspace }}/f5-xc-cert
      - name: Setup environment
        id: setup_env
        run: |
           cp main.tf.example main.tf
      - name: Setup Terraform
        id: setup_tf
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
        continue-on-error: true
      - name: Terraform Init
        id: init
        env:
          TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_APP_TERRAFORM_IO }}
        run: terraform init
      - name: Terraform Plan
        id: plan
        env:
          TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_APP_TERRAFORM_IO }}
          TF_VAR_azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
          TF_VAR_azure_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          TF_VAR_azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          TF_VAR_azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        run: terraform plan -no-color
        continue-on-error: false
      - name: Cleanup environment
        id: cleanup_env
        run: |
          rm main.tf
      - run: echo "This job's status is ${{ job.status }}."
  azure-marketplace-agreement-module-apply:
    runs-on: ubuntu-latest
    needs: [ azure-marketplace-agreement-module-plan ]
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub."
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository and submodules
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Checkout support repo
        uses: actions/checkout@v3
        with:
          repository: cklewar/f5-xc-cert
          path: f5-xc-cert
          token: ${{ secrets.GH_PAT }}
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: List files in the repository
        run: |
          ls -la ${{ github.workspace }}
      - name: List files in the cert repository
        run: |
          ls -la ${{ github.workspace }}/f5-xc-cert
      - name: Setup environment
        id: setup_env
        run: |
          cp main.tf.example main.tf
      - name: Setup Terraform
        id: setup_tf
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
        continue-on-error: true
      - name: Terraform Init
        id: init
        env:
          TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_APP_TERRAFORM_IO }}
        run: terraform init
      #- name: Run Azure marketplace agreements
      #  id: az_agreements
      #  env:
      #    TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_APP_TERRAFORM_IO }}
      #    TF_VAR_azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
      #    TF_VAR_azure_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
      #    TF_VAR_azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      #    TF_VAR_azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      #  run: |
      #    terraform import module.f5xc_azure_marketplace_agreement_single_nic.azurerm_marketplace_agreement.f5xc_azure_ce /subscriptions/e9cbbd48-704d-4dfa-bf62-60edda755a66/providers/Microsoft.MarketplaceOrdering/agreements/volterraedgeservices/offers/volterra-node/plans/volterra-node
      #    terraform import module.f5xc_azure_marketplace_agreement_multi_nic.azurerm_marketplace_agreement.f5xc_azure_ce /subscriptions/e9cbbd48-704d-4dfa-bf62-60edda755a66/providers/Microsoft.MarketplaceOrdering/agreements/volterraedgeservices/offers/entcloud_voltmesh_voltstack_node/plans/freeplan_entcloud_voltmesh_voltstack_node_multinic
      #    terraform import module.f5xc_azure_marketplace_agreement_app_stack.azurerm_marketplace_agreement.f5xc_azure_ce /subscriptions/e9cbbd48-704d-4dfa-bf62-60edda755a66/providers/Microsoft.MarketplaceOrdering/agreements/volterraedgeservices/offers/entcloud_voltmesh_voltstack_node/plans/freeplan_entcloud_voltmesh_voltstack_node
      - name: Terraform Apply
        id: apply
        env:
          TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_APP_TERRAFORM_IO }}
          TF_VAR_azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
          TF_VAR_azure_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          TF_VAR_azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          TF_VAR_azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        run: terraform apply -auto-approve -no-color
        continue-on-error: false
      - name: Cleanup environment
        id: cleanup_env
        run: |
          rm main.tf
      - run: echo "This job's status is ${{ job.status }}."
  azure-marketplace-agreement-module-destroy:
    runs-on: ubuntu-latest
    needs: [ azure-marketplace-agreement-module-apply ]
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub."
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository and submodules
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Checkout support repo
        uses: actions/checkout@v3
        with:
          repository: cklewar/f5-xc-cert
          path: f5-xc-cert
          token: ${{ secrets.GH_PAT }}
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: List files in the repository
        run: |
          ls -la ${{ github.workspace }}
      - name: List files in the cert repository
        run: |
          ls -la ${{ github.workspace }}/f5-xc-cert
      - name: Setup environment
        id: setup_env
        run: |
          cp main.tf.example main.tf
      - name: Setup Terraform
        id: setup_tf
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
        continue-on-error: true
      - name: Terraform Init
        id: init
        env:
          TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_APP_TERRAFORM_IO }}
        run: terraform init
      - name: Terraform Destroy
        id: destroy
        env:
          TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_APP_TERRAFORM_IO }}
          TF_VAR_azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
          TF_VAR_azure_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          TF_VAR_azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          TF_VAR_azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        run: terraform destroy -auto-approve -no-color
        continue-on-error: false
      - name: Cleanup environment
        id: cleanup_env
        run: |
          rm main.tf
      - run: echo "This job's status is ${{ job.status }}."